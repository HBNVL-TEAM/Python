import subprocess
import sys
import PySimpleGUI as sg
import time

sg.theme('SandyBeach')

def main():
  layout = [
        [sg.Image(data=rsa_base64, size=(200,60))],
        [sg.Text('P:          \t\t\t'),sg.Input(key='P', do_not_clear=False),sg.Text('Private key: \t\t'), sg.Input(key='D', do_not_clear=False)],
        [sg.Text('Q:          \t\t\t'),sg.Input(key='Q', do_not_clear=False),sg.Text('Public key: \t\t'), sg.Input(key='E', do_not_clear=False)],
        [sg.Text('Plaintext: \t\t'), sg.Input(key='M', do_not_clear=False),sg.Text('Plain Encrypt: \t\t'), sg.Input(key='C', do_not_clear=False)],
        [sg.Button('Encryption', bind_return_key=True),sg.Button('Decryption', bind_return_key=True)],
        [sg.Text('Loading data '),sg.ProgressBar(1000, orientation='h', size=(20, 20), key='progbar')],
        [sg.Button('About', bind_return_key=True,button_color=('black','yellow')), sg.Button('Clear',button_color=('black','red')),sg.Button('Exit',button_color=('black','green'))],
        [sg.Output(size=(150,25), background_color='black', text_color='yellow',key='1')],
        [sg.Text('\t\t\t\t\t\tCopyright © 2020 RSA Encryption Decryption - Author: Trương Hữu Phúc')]
        
        ]           
  

  window = sg.Window('RSA Encryption Decryption', layout,icon=rsa_base64)

  while True:
                event, values = window.read()
                if event in (sg.WIN_CLOSED, 'Exit'):
                        break
                elif event == 'Encryption':
                  if snt(int(values['P'])) and snt(int(values['Q'])):
                    e1="rsae.py " + values['M'] +" "+values['P']+" "+values['Q']
                    runCommand(cmd=e1,window=window)
                  else:
                    sg.popup('Thông Báo','P và Q phải là số nguyên tố')
                elif event == 'Decryption':
                  if snt(int(values['P'])) and snt(int(values['Q'])):
                    e2="rsad.py " + values['C'] +" "+values['P']+" "+values['Q']+" "+values['D']+" "+values['E']
                    runCommand(cmd=e2,window=window)
                  else:
                    sg.popup('Thông Báo','P và Q phải là số nguyên tố')
                elif event=='Clear':
                  window['1'].update('')
                elif event=='About':
                  sg.popup("Thông Tin",'Tác giả:Trương Hữu Phúc\nFB:fb.com/DdosFulzac')
  window.close()

def snt(n):
    dem=0
    for i in range(1,n+1):
        if(n%i==0):
            dem+=1
    if(dem==2):
        return True
    else:
        return False
def runCommand(cmd,window):
  window['progbar'].update_bar(0)
  for i in range(1000):
    window['progbar'].update_bar(i+1)
  p = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
  for line in p.stdout:
    line = line.decode(errors='replace' if (sys.version_info) < (3, 5) else 'backslashreplace').rstrip()
    print(line)
    time.sleep(1)

if __name__ == '__main__':
    rsa_base64 = b'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'

    main()
